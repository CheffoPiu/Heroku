name: Deploy to Heroku

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      # Credenciales Heroku
      - name: Setup Heroku credentials
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo "machine api.heroku.com login _ password $HEROKU_API_KEY" > ~/.netrc
          echo "machine registry.heroku.com login _ password $HEROKU_API_KEY" >> ~/.netrc
          chmod 600 ~/.netrc

      # Login a Heroku Container Registry
      - name: Heroku Container Registry Login
        run: heroku container:login

      # Fijar stack container (solo necesario la primera vez)
      - name: Set heroku stack to container
        run: heroku stack:set container -a distribuida

      # 1) Push de la imagen al registry de Heroku
      - name: Build & Push to Heroku Registry
        run: heroku container:push web -a distribuida

      # 2) Login a Docker Hub
      - name: Docker Hub Login
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN:    ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo "$DOCKERHUB_TOKEN" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin

      # 3) Pull desde Heroku, tag y push a Docker Hub
      - name: Tag & Push to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          docker pull registry.heroku.com/distribuida/web:latest
          docker tag registry.heroku.com/distribuida/web:latest \
                     $DOCKERHUB_USERNAME/distribuida:latest
          docker push $DOCKERHUB_USERNAME/distribuida:latest

      # 4) Release en Heroku
      - name: Release on Heroku
        run: heroku container:release web -a distribuida
